"use strict";(self.webpackChunkrust_block=self.webpackChunkrust_block||[]).push([[44],{44:function(n,e,t){t.a(n,(async function(n,r){try{t.r(e),t.d(e,{__wbg_set_wasm:function(){return o.oT},fib:function(){return o.tu},hello:function(){return o.oU}});var u=t(786),o=t(366),c=n([u]);u=(c.then?(await c)():c)[0],(0,o.oT)(u),r()}catch(n){r(n)}}))},366:function(n,e,t){let r;function u(n){r=n}t.d(e,{oT:function(){return u},oU:function(){return a},tu:function(){return l}}),n=t.hmd(n);let o=null;function c(){return null!==o&&0!==o.byteLength||(o=new Int32Array(r.memory.buffer)),o}let i=new("undefined"==typeof TextDecoder?(0,n.require)("util").TextDecoder:TextDecoder)("utf-8",{ignoreBOM:!0,fatal:!0});i.decode();let f=null;function a(){try{const o=r.__wbindgen_add_to_stack_pointer(-16);r.hello(o);var n=c()[o/4+0],e=c()[o/4+1];return t=n,u=e,i.decode((null!==f&&0!==f.byteLength||(f=new Uint8Array(r.memory.buffer)),f).subarray(t,t+u))}finally{r.__wbindgen_add_to_stack_pointer(16),r.__wbindgen_free(n,e)}var t,u}function l(n){return r.fib(n)>>>0}},786:function(n,e,t){n.exports=t.v(e,n.id,"539ca7a21c78f034b66e")}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDQuanMiLCJtYXBwaW5ncyI6InNUQUVBQSxFQUFBQSxFQUFBQSxJQUFlQyxHLDJDQ0ZmLElBQUlBLEVBQ0csU0FBU0QsRUFBZUUsR0FDM0JELEVBQU9DLENBQ1gsQyw0RkFHQSxJQUFJQyxFQUFxQixLQUV6QixTQUFTQyxJQUlMLE9BSDJCLE9BQXZCRCxHQUFpRSxJQUFsQ0EsRUFBbUJFLGFBQ2xERixFQUFxQixJQUFJRyxXQUFXTCxFQUFLTSxPQUFPQyxTQUU3Q0wsQ0FDWCxDQUlBLElBQUlNLEVBQW9CLElBRm9CLG9CQUFoQkMsYUFBOEIsRUFBSUMsRUFBT0MsU0FBUyxRQUFRRixZQUFjQSxhQUUzRCxRQUFTLENBQUVHLFdBQVcsRUFBTUMsT0FBTyxJQUU1RUwsRUFBa0JNLFNBRWxCLElBQUlDLEVBQXFCLEtBZWxCLFNBQVNDLElBQ1osSUFDSSxNQUFNQyxFQUFTakIsRUFBS2tCLGlDQUFpQyxJQUNyRGxCLEVBQUtnQixNQUFNQyxHQUNYLElBQUlFLEVBQUtoQixJQUFrQmMsRUFBUyxFQUFJLEdBQ3BDRyxFQUFLakIsSUFBa0JjLEVBQVMsRUFBSSxHQUN4QyxPQVpvQkksRUFZTUYsRUFaREcsRUFZS0YsRUFYM0JaLEVBQWtCTSxRQVBFLE9BQXZCQyxHQUFpRSxJQUFsQ0EsRUFBbUJYLGFBQ2xEVyxFQUFxQixJQUFJUSxXQUFXdkIsRUFBS00sT0FBT0MsU0FFN0NRLEdBSTJDUyxTQUFTSCxFQUFLQSxFQUFNQyxHQVl0RSxDQUFFLFFBQ0V0QixFQUFLa0IsZ0NBQWdDLElBQ3JDbEIsRUFBS3lCLGdCQUFnQk4sRUFBSUMsRUFDN0IsQ0FoQkosSUFBNEJDLEVBQUtDLENBaUJqQyxDQVFPLFNBQVNJLEVBQUlDLEdBRWhCLE9BRFkzQixFQUFLMEIsSUFBSUMsS0FDTixDQUNuQixDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcnVzdC1ibG9jay8uL3NyYy93YXNtL2hlbGxvLXdhc20vcGtnL2hlbGxvX3dhc20uanMiLCJ3ZWJwYWNrOi8vcnVzdC1ibG9jay8uL3NyYy93YXNtL2hlbGxvLXdhc20vcGtnL2hlbGxvX3dhc21fYmcuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgd2FzbSBmcm9tIFwiLi9oZWxsb193YXNtX2JnLndhc21cIjtcbmltcG9ydCB7IF9fd2JnX3NldF93YXNtIH0gZnJvbSBcIi4vaGVsbG9fd2FzbV9iZy5qc1wiO1xuX193Ymdfc2V0X3dhc20od2FzbSk7XG5leHBvcnQgKiBmcm9tIFwiLi9oZWxsb193YXNtX2JnLmpzXCI7XG4iLCJsZXQgd2FzbTtcbmV4cG9ydCBmdW5jdGlvbiBfX3diZ19zZXRfd2FzbSh2YWwpIHtcbiAgICB3YXNtID0gdmFsO1xufVxuXG5cbmxldCBjYWNoZWRJbnQzMk1lbW9yeTAgPSBudWxsO1xuXG5mdW5jdGlvbiBnZXRJbnQzMk1lbW9yeTAoKSB7XG4gICAgaWYgKGNhY2hlZEludDMyTWVtb3J5MCA9PT0gbnVsbCB8fCBjYWNoZWRJbnQzMk1lbW9yeTAuYnl0ZUxlbmd0aCA9PT0gMCkge1xuICAgICAgICBjYWNoZWRJbnQzMk1lbW9yeTAgPSBuZXcgSW50MzJBcnJheSh3YXNtLm1lbW9yeS5idWZmZXIpO1xuICAgIH1cbiAgICByZXR1cm4gY2FjaGVkSW50MzJNZW1vcnkwO1xufVxuXG5jb25zdCBsVGV4dERlY29kZXIgPSB0eXBlb2YgVGV4dERlY29kZXIgPT09ICd1bmRlZmluZWQnID8gKDAsIG1vZHVsZS5yZXF1aXJlKSgndXRpbCcpLlRleHREZWNvZGVyIDogVGV4dERlY29kZXI7XG5cbmxldCBjYWNoZWRUZXh0RGVjb2RlciA9IG5ldyBsVGV4dERlY29kZXIoJ3V0Zi04JywgeyBpZ25vcmVCT006IHRydWUsIGZhdGFsOiB0cnVlIH0pO1xuXG5jYWNoZWRUZXh0RGVjb2Rlci5kZWNvZGUoKTtcblxubGV0IGNhY2hlZFVpbnQ4TWVtb3J5MCA9IG51bGw7XG5cbmZ1bmN0aW9uIGdldFVpbnQ4TWVtb3J5MCgpIHtcbiAgICBpZiAoY2FjaGVkVWludDhNZW1vcnkwID09PSBudWxsIHx8IGNhY2hlZFVpbnQ4TWVtb3J5MC5ieXRlTGVuZ3RoID09PSAwKSB7XG4gICAgICAgIGNhY2hlZFVpbnQ4TWVtb3J5MCA9IG5ldyBVaW50OEFycmF5KHdhc20ubWVtb3J5LmJ1ZmZlcik7XG4gICAgfVxuICAgIHJldHVybiBjYWNoZWRVaW50OE1lbW9yeTA7XG59XG5cbmZ1bmN0aW9uIGdldFN0cmluZ0Zyb21XYXNtMChwdHIsIGxlbikge1xuICAgIHJldHVybiBjYWNoZWRUZXh0RGVjb2Rlci5kZWNvZGUoZ2V0VWludDhNZW1vcnkwKCkuc3ViYXJyYXkocHRyLCBwdHIgKyBsZW4pKTtcbn1cbi8qKlxuKiBAcmV0dXJucyB7c3RyaW5nfVxuKi9cbmV4cG9ydCBmdW5jdGlvbiBoZWxsbygpIHtcbiAgICB0cnkge1xuICAgICAgICBjb25zdCByZXRwdHIgPSB3YXNtLl9fd2JpbmRnZW5fYWRkX3RvX3N0YWNrX3BvaW50ZXIoLTE2KTtcbiAgICAgICAgd2FzbS5oZWxsbyhyZXRwdHIpO1xuICAgICAgICB2YXIgcjAgPSBnZXRJbnQzMk1lbW9yeTAoKVtyZXRwdHIgLyA0ICsgMF07XG4gICAgICAgIHZhciByMSA9IGdldEludDMyTWVtb3J5MCgpW3JldHB0ciAvIDQgKyAxXTtcbiAgICAgICAgcmV0dXJuIGdldFN0cmluZ0Zyb21XYXNtMChyMCwgcjEpO1xuICAgIH0gZmluYWxseSB7XG4gICAgICAgIHdhc20uX193YmluZGdlbl9hZGRfdG9fc3RhY2tfcG9pbnRlcigxNik7XG4gICAgICAgIHdhc20uX193YmluZGdlbl9mcmVlKHIwLCByMSk7XG4gICAgfVxufVxuXG4vKipcbiogZmlib25hY2NpIGZ1bmN0aW9uXG4qIGh0dHBzOi8vZ2l0aHViLmNvbS9ydXN0LWxhbmcvcnVzdC1ieS1leGFtcGxlXG4qIEBwYXJhbSB7bnVtYmVyfSBuXG4qIEByZXR1cm5zIHtudW1iZXJ9XG4qL1xuZXhwb3J0IGZ1bmN0aW9uIGZpYihuKSB7XG4gICAgY29uc3QgcmV0ID0gd2FzbS5maWIobik7XG4gICAgcmV0dXJuIHJldCA+Pj4gMDtcbn1cblxuIl0sIm5hbWVzIjpbIl9fd2JnX3NldF93YXNtIiwid2FzbSIsInZhbCIsImNhY2hlZEludDMyTWVtb3J5MCIsImdldEludDMyTWVtb3J5MCIsImJ5dGVMZW5ndGgiLCJJbnQzMkFycmF5IiwibWVtb3J5IiwiYnVmZmVyIiwiY2FjaGVkVGV4dERlY29kZXIiLCJUZXh0RGVjb2RlciIsIm1vZHVsZSIsInJlcXVpcmUiLCJpZ25vcmVCT00iLCJmYXRhbCIsImRlY29kZSIsImNhY2hlZFVpbnQ4TWVtb3J5MCIsImhlbGxvIiwicmV0cHRyIiwiX193YmluZGdlbl9hZGRfdG9fc3RhY2tfcG9pbnRlciIsInIwIiwicjEiLCJwdHIiLCJsZW4iLCJVaW50OEFycmF5Iiwic3ViYXJyYXkiLCJfX3diaW5kZ2VuX2ZyZWUiLCJmaWIiLCJuIl0sInNvdXJjZVJvb3QiOiIifQ==